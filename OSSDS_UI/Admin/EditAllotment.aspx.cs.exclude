using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using Seed_DL;

public partial class Admin_EditAllotment : System.Web.UI.Page
{
    Masters objm = new Masters();
    Admin ad = new Admin();
    DataTable dt;
    CommonFuncs objCommon = new CommonFuncs();
    string state, conkey; 
    SampleSqlInjectionScreeningModule obj = new SampleSqlInjectionScreeningModule();


    protected void Page_Load(object sender, EventArgs e)
    {
        if ((Request.ServerVariables["HTTP_REFERER"] == null) || (Request.ServerVariables["HTTP_REFERER"] == ""))
        {
            Response.Redirect("~/Error.aspx");
        }
        else
        {
            string http_ref = Request.ServerVariables["HTTP_REFERER"].Trim();
            string http_hos = Request.ServerVariables["HTTP_HOST"].Trim();
            int len = http_hos.Length;
            if (http_ref.IndexOf(http_hos, 0) < 0)
            {
                Response.Redirect("~/Error.aspx");
            }
        }
        PrevBrowCache.enforceNoCache();
        if (Session["UsrName"] == null || Session["UsrName"].ToString() != "Admin")
        {
            Response.Redirect("~/Error.aspx");
        }
        else
        {
            state = Session["StateCode"].ToString();
            conkey = Session["ConnKey"].ToString();
        }
        if (!IsPostBack)
        {
            random();
            try
            {
                lblUsrName.Text = Session["Role"].ToString();
                lblDate.Text = DateTime.Now.Day + "/" + DateTime.Now.Month + "/" + DateTime.Now.Year;
                btnUpdate.Visible = false;
                //BindCrops();
                BindDist();
                BindAgencies();
                objCommon.BindFinancialYears(ddlyear);
                BindSchemes();
            }
            catch (Exception ex)
            {
                ExceptionLogging.SendExcepToDB(ex, Session["UsrName"].ToString(), Request.ServerVariables["REMOTE_ADDR"].ToString());
                Response.Redirect("~/Error.aspx");
            }
        }
    }
    protected void BindSchemes()
    {       
        dt = new DataTable();
        dt = objm.GetSchemes(conkey);
        objCommon.BindDropDownLists(ddlscheme, dt, "Scheme_Name", "Scheme_ID", "Select Scheme");      
    }

    protected void ddlscheme_SelectedIndexChanged(object sender, EventArgs e)
    {
        BindCrops();
    }
    protected void BindCrops()
    {
        dt = new DataTable();
        dt = objm.GetCrops(ddlscheme.SelectedValue, conkey);
        objCommon.BindDropDownLists(ddlcropname, dt, "CropName", "CropCode", "Select Crop Name");
    }
    protected void BindAgencies()
    {
        dt = new DataTable();
        dt = objm.GetAgencies(conkey);
        objCommon.BindDropDownLists(ddlAgency, dt, "AgencyName", "AgencyCode", "Select Agency");
    }
    protected void BindDist()
    {
        dt = new DataTable();
        dt = objm.GetDistricts(state, ddlyear.SelectedValue, seasons.SelectedValue, conkey);
        objCommon.BindDropDownLists(ddldist, dt, "DistName", "DistCode", "Select District");
    }
    protected void seasons_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlyear.SelectedIndex == 0)
        {
            objCommon.ShowAlertMessage("select year");
            ddlyear.Focus();
            seasons.SelectedIndex = 0;
        }
        else
        {
            dt = new DataTable();
            try
            {
                dt = ad.GetSeedAllotment(ddlyear.SelectedValue, seasons.SelectedValue, conkey);
                if (dt.Rows.Count > 0)
                {
                    grdSeed.DataSource = dt;
                    grdSeed.DataBind();
                }
                else
                {
                    grdSeed.DataSource = null;
                    grdSeed.DataBind();
                }
            }
            catch (Exception ex)
            {
                ExceptionLogging.SendExcepToDB(ex, Session["UsrName"].ToString(), Request.ServerVariables["REMOTE_ADDR"].ToString());
                Response.Redirect("~/Error.aspx");
            }
        }
    }
    protected void ddlcropname_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlcropname.SelectedIndex != 0)
        {
            dt = new DataTable();
            try
            {
                dt = ad.GetSeedAllotment(ddlyear.SelectedValue, seasons.SelectedValue, ddlcropname.SelectedValue, conkey);
                if (dt.Rows.Count > 0)
                {
                    grdSeed.DataSource = dt;
                    grdSeed.DataBind();
                }
                else
                {
                    grdSeed.DataSource = null;
                    grdSeed.DataBind();
                }
            }
            catch (Exception ex)
            {
                ExceptionLogging.SendExcepToDB(ex, Session["UsrName"].ToString(), Request.ServerVariables["REMOTE_ADDR"].ToString());
                Response.Redirect("~/Error.aspx");
            }
        }
    }

    protected void ddldist_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddldist.SelectedIndex != 0)
        {
            dt = new DataTable();
            try
            {
                dt = ad.GetSeedAllotment(ddlyear.SelectedValue, seasons.SelectedValue, ddlcropname.SelectedValue, ddldist.SelectedValue, conkey);
                if (dt.Rows.Count > 0)
                {
                    grdSeed.DataSource = dt;
                    grdSeed.DataBind();
                }
                else
                {
                    grdSeed.DataSource = null;
                    grdSeed.DataBind();
                }
            }
            catch (Exception ex)
            {
                ExceptionLogging.SendExcepToDB(ex, Session["UsrName"].ToString(), Request.ServerVariables["REMOTE_ADDR"].ToString());
                Response.Redirect("~/Error.aspx");
            }
        }
    }
    

    protected void ddlAgency_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlAgency.SelectedIndex != 0)
        {
            dt = new DataTable();
            try
            {
                dt = ad.GetSeedAllotment(ddlyear.SelectedValue, seasons.SelectedValue, ddlcropname.SelectedValue, ddldist.SelectedValue, ddlAgency.SelectedValue, conkey);
                if (dt.Rows.Count > 0)
                {
                    grdSeed.DataSource = dt;
                    grdSeed.DataBind();
                }
                else
                {
                    grdSeed.DataSource = null;
                    grdSeed.DataBind();
                }
            }
            catch (Exception ex)
            {
                ExceptionLogging.SendExcepToDB(ex, Session["UsrName"].ToString(), Request.ServerVariables["REMOTE_ADDR"].ToString());
                Response.Redirect("~/Error.aspx");
            }
        }
    }
    protected void BindGrid()
    {
        dt = new DataTable();
        try
        {
            dt = ad.GetSeedAllotment(ddlyear.SelectedValue, seasons.SelectedValue, ddlcropname.SelectedValue, conkey);
            if (dt.Rows.Count > 0)
            {
                grdSeed.DataSource = dt;
                grdSeed.DataBind();
            }
            else
            {
                grdSeed.DataSource = null;
                grdSeed.DataBind();
            }
        }
        catch (Exception ex)
        {
            ExceptionLogging.SendExcepToDB(ex, Session["UsrName"].ToString(), Request.ServerVariables["REMOTE_ADDR"].ToString());
            Response.Redirect("~/Error.aspx");
        }
    }
    protected void grdSeed_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        try
        {
            if (e.CommandName == "Edt")
            {
                GridViewRow gvrow = (GridViewRow)((Control)e.CommandSource).NamingContainer;
                ddlyear.SelectedValue = ((Label)gvrow.FindControl("lblyear")).Text;
                string s = ((Label)gvrow.FindControl("lblseason")).Text;
                ddlyear.Enabled = false;
                seasons.Enabled = false;

                BindAgencies();
                ddlAgency.SelectedValue = ((Label)gvrow.FindControl("lblagencycode")).Text;

                BindSchemes();
                ddlscheme.SelectedValue = ((Label)gvrow.FindControl("lblschemeid")).Text;

                BindCrops();
                ddlcropname.SelectedValue = ((Label)gvrow.FindControl("lblcropcode")).Text;

                BindDist();
                ddldist.SelectedValue = ((Label)gvrow.FindControl("lbldistcode")).Text;

                txtqty.Text = ((Label)gvrow.FindControl("lblqty")).Text;
                lblaid.Text = ((Label)gvrow.FindControl("lblallotid")).Text;

                btnUpdate.Visible = true;
            }
            if (e.CommandName == "Dlt")
            {
                GridViewRow gvrow = (GridViewRow)((Control)e.CommandSource).NamingContainer;
                lblaid.Text = ((Label)gvrow.FindControl("lblallotid")).Text;
                dt = new DataTable();
                dt = ad.DeleteSeedAllotment(lblaid.Text, conkey);
                if (dt.Rows.Count > 0)
                {
                    objCommon.ShowAlertMessage("Failed to Delete");
                    BindGrid();
                }
                else
                {
                    objCommon.ShowAlertMessage("Deleted. Click on Freeze to Freeze Allotments");
                    BindGrid();
                }
            }
        }
        catch (Exception ex)
        {
            ExceptionLogging.SendExcepToDB(ex, Session["UsrName"].ToString(), Request.ServerVariables["REMOTE_ADDR"].ToString());
            Response.Redirect("~/Error.aspx");
        }
    }
    protected bool ValidatePage()
    {
        if (ddlyear.SelectedIndex == 0)
        {
            objCommon.ShowAlertMessage("Select Year");
            ddlyear.Focus();
            return false;
        }
        if (seasons.SelectedIndex == 0)
        {
            objCommon.ShowAlertMessage("Select Season");
            seasons.Focus();
            return false;
        }
        if (ddlcropname.SelectedIndex == 0)
        {
            objCommon.ShowAlertMessage("Select Crop");
            ddlcropname.Focus();
            return false;
        }
        if (ddlAgency.SelectedIndex == 0)
        {
            objCommon.ShowAlertMessage("Select Agency");
            ddlAgency.Focus();
            return false;
        }
        if (ddlscheme.SelectedIndex == 0)
        {
            objCommon.ShowAlertMessage("Select Scheme");
            ddlscheme.Focus();
            return false;
        }
        if (txtqty.Text=="")
        {
            objCommon.ShowAlertMessage("Enter Quantity to allot");
            txtqty.Focus();
            return false;
        }
        if (txtqty.Text != "")
        {
            bool val;
            val = obj.CheckInput_new(txtqty.Text);
            if (val == true)
            {
                Response.Redirect("~/Error.aspx");
                return false;
            }
            else
                return true;
        }
        return true;
    }
    protected void btnUpdate_Click1(object sender, EventArgs e)
    {
        check();
        if (ValidatePage())
        {
            try
            {
                dt = new DataTable();
                dt = ad.UpdateSeedAllotment(lblaid.Text, ddlyear.SelectedValue, seasons.SelectedValue, ddlcropname.SelectedValue, ddlAgency.SelectedValue, ddlscheme.SelectedValue, txtqty.Text.Trim(), ddldist.SelectedValue, conkey);
                if (dt.Rows.Count > 0)
                {
                    objCommon.ShowAlertMessage("Failed to Update");
                    BindGrid();
                }
                else
                {
                    objCommon.ShowAlertMessage("Updated. Click on Freeze to Freeze Allotments");
                    BindGrid();
                }
                btnUpdate.Visible = false;
            }
            catch (Exception ex)
            {
                ExceptionLogging.SendExcepToDB(ex, Session["UsrName"].ToString(), Request.ServerVariables["REMOTE_ADDR"].ToString());
                Response.Redirect("~/Error.aspx");
            }
        }
    }


    public void random()
    {
        try
        {
            string strString = "abcdefghijklmnpqrstuvwxyzABCDQEFGHIJKLMNOPQRSTUVWXYZ1234567890";
            string num = "";
            Random rm = new Random();
            for (int i = 0; i < 16; i++)
            {
                int randomcharindex = rm.Next(0, strString.Length);
                char randomchar = strString[randomcharindex];
                num += Convert.ToString(randomchar);
            }

            Response.Cookies.Add(new HttpCookie("ASPFIXATION2", num));
            hf.Value = num;
            Session["ASPFIXATION2"] = num;
        }
        catch (Exception ex)
        {
            Response.Redirect("~/Error.aspx");
        }
    }
    public void check()
    {
        try
        {
            string cookie_value = null;
            string session_value = null;
            //cookie_value = System.Web.HttpContext.Current.Request.Cookies["ASPFIXATION2"].Value;
            cookie_value = hf.Value;
            session_value = System.Web.HttpContext.Current.Session["ASPFIXATION2"].ToString();
            if (cookie_value != session_value)
            {
                System.Web.HttpContext.Current.Session.Abandon();
                HttpContext.Current.Response.Buffer = false;
                HttpContext.Current.Response.Redirect("~/Error.aspx");
            }
        }
        catch (Exception ex)
        {
            Response.Redirect("~/Error.aspx");
        }
    }

    protected void Button1_Click1(object sender, EventArgs e)
    {
        decimal tot = 0;
        foreach (GridViewRow gvr in grdSeed.Rows)
        {
            decimal q = Convert.ToDecimal(((Label)gvr.FindControl("lblqty")).Text.Trim());
            tot += q;
        }
        lbltotal.Text = tot.ToString();   
    }
}